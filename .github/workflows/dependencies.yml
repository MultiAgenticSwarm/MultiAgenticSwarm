name: Dependencies Update

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools

      - name: Update dependencies
        run: |
          # Generate requirements.txt from pyproject.toml if it doesn't exist
          if [ ! -f requirements.txt ]; then
            pip-compile pyproject.toml
          fi

          # Update all dependencies
          pip-compile --upgrade pyproject.toml

          # Check for security vulnerabilities
          pip install safety
          safety check --full-report || echo "Safety check completed with warnings"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update dependencies"
          title: "chore: update dependencies"
          body: |
            This PR updates the project dependencies to their latest versions.

            ## Changes
            - Updated all dependencies to latest compatible versions
            - Ran security vulnerability check

            ## Testing
            - [ ] CI tests pass
            - [ ] Manual testing completed

            Auto-generated by GitHub Actions.
          branch: update-dependencies
          delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install safety bandit[toml]

      - name: Run security audit
        run: |
          echo "Running security audit..."

          # Check for known security vulnerabilities
          safety check --full-report --output text > security-report.txt 2>&1 || true

          # Run bandit for security issues in code
          bandit -r multiagenticswarm/ -f txt -o bandit-report.txt || true

          # Combine reports
          cat > security-summary.md << EOF
          # Security Audit Report

          ## Dependency Vulnerabilities
          \`\`\`
          $(cat security-report.txt)
          \`\`\`

          ## Code Security Issues
          \`\`\`
          $(cat bandit-report.txt)
          \`\`\`

          Generated on: $(date)
          EOF

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-report
          path: |
            security-summary.md
            security-report.txt
            bandit-report.txt

      - name: Comment on security issues
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('security-summary.md', 'utf8');

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Security Audit Report - Issues Found',
              body: report,
              labels: ['security', 'automated']
            });
